<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>TnT</title>
    <description>Just the Tip</description>
    <link>/</link>
    <atom:link href="/feed.xml" rel="self" type="application/rss+xml"/>
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
    <pubDate>Tue, 12 Apr 2016 14:20:05 -0700</pubDate>
    <lastBuildDate>Tue, 12 Apr 2016 14:20:05 -0700</lastBuildDate>
=======
    <pubDate>Tue, 12 Apr 2016 14:24:55 -0700</pubDate>
    <lastBuildDate>Tue, 12 Apr 2016 14:24:55 -0700</lastBuildDate>
>>>>>>> fd0be8d7aef1c0221ec6e9f7ef5e9efa3276fc13
=======
    <pubDate>Tue, 12 Apr 2016 14:29:27 -0700</pubDate>
    <lastBuildDate>Tue, 12 Apr 2016 14:29:27 -0700</lastBuildDate>
>>>>>>> 497345566888403cb29ed00ce9e021c965574da1
=======
    <pubDate>Tue, 12 Apr 2016 14:31:52 -0700</pubDate>
    <lastBuildDate>Tue, 12 Apr 2016 14:31:52 -0700</lastBuildDate>
>>>>>>> d0d470a42b5d491e08314b01f460ee831c693579
=======
    <pubDate>Tue, 12 Apr 2016 14:34:20 -0700</pubDate>
    <lastBuildDate>Tue, 12 Apr 2016 14:34:20 -0700</lastBuildDate>
>>>>>>> 538a15e49144c598678b37d7e5bb8ed5472d10bc
=======
    <pubDate>Tue, 12 Apr 2016 14:35:22 -0700</pubDate>
    <lastBuildDate>Tue, 12 Apr 2016 14:35:22 -0700</lastBuildDate>
>>>>>>> afe0d47cfa41d198df0086da38ec22a140cbe5cf
=======
    <pubDate>Tue, 12 Apr 2016 14:36:38 -0700</pubDate>
    <lastBuildDate>Tue, 12 Apr 2016 14:36:38 -0700</lastBuildDate>
>>>>>>> 20f8788b958b8abab6b3602a233a6466e6053943
=======
    <pubDate>Tue, 12 Apr 2016 14:37:52 -0700</pubDate>
    <lastBuildDate>Tue, 12 Apr 2016 14:37:52 -0700</lastBuildDate>
>>>>>>> 678a2172e7a45e778c3084fb4bff6bed68392c77
    <generator>Jekyll v2.5.3</generator>
    
      <item>
        <title>Welcome to Jekyll!</title>
        <description>&lt;p&gt;You’ll find this post in your &lt;code&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Tom&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints &amp;#39;Hi, Tom&amp;#39; to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://github.com/jekyll/jekyll-help&quot;&gt;Jekyll’s dedicated Help repository&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Thu, 12 Nov 2015 11:19:43 -0800</pubDate>
        <link>/jekyll/update/2015/welcome-to-jekyll/</link>
        <guid isPermaLink="true">/jekyll/update/2015/welcome-to-jekyll/</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
=======
    <pubDate>Tue, 12 Apr 2016 14:43:49 -0700</pubDate>
    <lastBuildDate>Tue, 12 Apr 2016 14:43:49 -0700</lastBuildDate>
    <generator>Jekyll v2.5.3</generator>
    
      <item>
        <title>Keeping API Keys out of your github repo</title>
=======
    <pubDate>Tue, 12 Apr 2016 15:02:38 -0700</pubDate>
    <lastBuildDate>Tue, 12 Apr 2016 15:02:38 -0700</lastBuildDate>
=======
    <pubDate>Tue, 12 Apr 2016 15:22:59 -0700</pubDate>
    <lastBuildDate>Tue, 12 Apr 2016 15:22:59 -0700</lastBuildDate>
>>>>>>> eb65a6aa5cfe80bd04fec6de52aa24f68207f55a
    <generator>Jekyll v2.5.3</generator>
    
      <item>
        <title>Keeping API Keys Secret</title>
<<<<<<< HEAD
>>>>>>> 098476de75a84c64c85acaf78ca1c4b4f97e808a
=======
>>>>>>> eb65a6aa5cfe80bd04fec6de52aa24f68207f55a
=======
    <pubDate>Tue, 12 Apr 2016 16:01:21 -0700</pubDate>
    <lastBuildDate>Tue, 12 Apr 2016 16:01:21 -0700</lastBuildDate>
=======
    <pubDate>Tue, 12 Apr 2016 16:06:30 -0700</pubDate>
    <lastBuildDate>Tue, 12 Apr 2016 16:06:30 -0700</lastBuildDate>
>>>>>>> 085fd2052ea088f15bfd5dc602a103ed413cad3f
    <generator>Jekyll v2.5.3</generator>
    
      <item>
        <title>Cursors &amp; RecyclerViews, Smurf Yeah!</title>
        <description>&lt;p&gt;Every time I start a new Android project I know for a fact that there will be
some sort of content provider/resolver laden snake pit that I will inevitably fall
into. Most recently it was trying to get RecyclerViews to play nicely with Cursors.
Cursors, of course are what gets returned by a content resolver when it queries the SQLite
datastore that comes baked into Android &lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;p&gt;The issue is one of multiple inheritance. a standard RecyclerView adapter definition looks like:&lt;/p&gt;

<<<<<<< HEAD
&lt;noscript&gt;&lt;pre&gt;## Test

This is a test gist.&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/parkr/c08ee0f2726fd0e3909d.js?file=test.md&quot;&gt; &lt;/script&gt;
=======
&lt;noscript&gt;&lt;pre&gt;Not Found&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/swolfand/e9814d654fc536641e6c64a4ff480941.js?file=CursorRecyclerViewAdapter.md&quot;&gt; &lt;/script&gt;
>>>>>>> 085fd2052ea088f15bfd5dc602a103ed413cad3f

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
<<<<<<< HEAD
      &lt;p&gt;&lt;small&gt; I know what you’re going to say: “Don’t use SQLite! Use —-“, where —- is one of a &lt;/small&gt; number of options. This post isn’t for you &amp;lt;/small&amp;gt; &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
=======
      &lt;p&gt;&lt;small&gt; I know what you’re going to say: “Don’t use SQLite! Use —-“, where —- is one of a number of options. This post isn’t for you &lt;/small&gt; &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
>>>>>>> 085fd2052ea088f15bfd5dc602a103ed413cad3f
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
        <pubDate>Tue, 12 Apr 2016 08:26:27 -0700</pubDate>
        <link>/using-cursors-with-recycler-views</link>
        <guid isPermaLink="true">/using-cursors-with-recycler-views</guid>
        
        <category>android</category>
        
        <category>recyclerview</category>
        
        <category>cursors</category>
        
        <category>adapter</category>
        
        <category>content</category>
        
        <category>provider</category>
        
        
      </item>
    
      <item>
        <title>Keeping API Keys Secret</title>
<<<<<<< HEAD
>>>>>>> 03b9ea92447d904fa93e04d1abab6916eec389f7
=======
>>>>>>> 085fd2052ea088f15bfd5dc602a103ed413cad3f
        <description>&lt;p&gt;We all use API keys, I am a bit lazy and my projects are small so I try to keep the effort minimal.
More often than not, I hardcode my API Key into my project, forget about it, then push that key to my github repo.
This is bad practice for a number of reasons as such, this is how I started to prevent my API keys from getting committed to my github repo&lt;/p&gt;

<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
&lt;p&gt;1) In the module level &lt;code&gt;build.gradle&lt;/code&gt; file I put the following at the very top:&lt;/p&gt;
=======
&lt;p&gt;&lt;strong&gt;1)&lt;/strong&gt; In the module level &lt;code&gt;build.gradle&lt;/code&gt; file I put the following at the very top:&lt;/p&gt;
>>>>>>> eb65a6aa5cfe80bd04fec6de52aa24f68207f55a
=======
&lt;p&gt;&lt;strong&gt;1)&lt;/strong&gt; In the module level &lt;code&gt;build.gradle&lt;/code&gt; file I put the following at the very top:&lt;/p&gt;
>>>>>>> 03b9ea92447d904fa93e04d1abab6916eec389f7
=======
&lt;p&gt;&lt;strong&gt;1)&lt;/strong&gt; In the module level &lt;code&gt;build.gradle&lt;/code&gt; file I put the following at the very top:&lt;/p&gt;
>>>>>>> 085fd2052ea088f15bfd5dc602a103ed413cad3f

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-groovy&quot; data-lang=&quot;groovy&quot;&gt;&lt;span class=&quot;n&quot;&gt;Properties&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;props&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Properties&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;File&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;propsFile&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;your_file_name.properties&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;propsFile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;exists&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;propsFile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;newDataInputStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;MY_API_KEY&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setProperty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;myApiKey&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;MY_API_KEY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;GradleException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Missing your_file_name.properties, check the your_file_name.properties&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;in the same &lt;code&gt;build.gradle&lt;/code&gt; file, add the following to the android block:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-groovy&quot; data-lang=&quot;groovy&quot;&gt;&lt;span class=&quot;n&quot;&gt;android&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// some stuff here&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;buildTypes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// more stuff here&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
           &lt;span class=&quot;n&quot;&gt;buildConfigField&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;String&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;MY_API_KEY&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;\&amp;quot;${props.getProperty(&amp;quot;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;myApiKey&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;)}\&amp;quot;&amp;quot;&lt;/span&gt;
       &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
&lt;p&gt;2) in your &lt;em&gt;app&lt;/em&gt; module add your properties file, and add the api key.
=======
&lt;p&gt;&lt;strong&gt;2)&lt;/strong&gt; in your &lt;em&gt;app&lt;/em&gt; module add your properties file, and add the api key.
>>>>>>> eb65a6aa5cfe80bd04fec6de52aa24f68207f55a
=======
&lt;p&gt;&lt;strong&gt;2)&lt;/strong&gt; in your &lt;em&gt;app&lt;/em&gt; module add your properties file, and add the api key.
>>>>>>> 03b9ea92447d904fa93e04d1abab6916eec389f7
=======
&lt;p&gt;&lt;strong&gt;2)&lt;/strong&gt; in your &lt;em&gt;app&lt;/em&gt; module add your properties file, and add the api key.
>>>>>>> 085fd2052ea088f15bfd5dc602a103ed413cad3f
&lt;strong&gt;NOTE: Your property name must match whatever you put in your build.gradle file&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;EX:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
# my_property_file.properties
myApiKey = SOME_LONG_OBNOXIOUS_KEY
&lt;/code&gt;&lt;/p&gt;

<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
&lt;p&gt;3) In your app level &lt;code&gt;.gitignore&lt;/code&gt; add the following:&lt;br /&gt;
=======
&lt;p&gt;&lt;strong&gt;3)&lt;/strong&gt; In your app level &lt;code&gt;.gitignore&lt;/code&gt; add the following:&lt;br /&gt;
>>>>>>> eb65a6aa5cfe80bd04fec6de52aa24f68207f55a
=======
&lt;p&gt;&lt;strong&gt;3)&lt;/strong&gt; In your app level &lt;code&gt;.gitignore&lt;/code&gt; add the following:&lt;br /&gt;
>>>>>>> 03b9ea92447d904fa93e04d1abab6916eec389f7
=======
&lt;p&gt;&lt;strong&gt;3)&lt;/strong&gt; In your app level &lt;code&gt;.gitignore&lt;/code&gt; add the following:&lt;br /&gt;
>>>>>>> 085fd2052ea088f15bfd5dc602a103ed413cad3f
&lt;code&gt;
/build  
/myfile.properties
&lt;/code&gt;&lt;/p&gt;

<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
&lt;p&gt;4) That’s it! you can now use your API key anywhere in your android application as a &lt;code&gt;BuildConfig&lt;/code&gt; variable
=======
&lt;p&gt;&lt;strong&gt;4)&lt;/strong&gt; That’s it! you can now use your API key anywhere in your android application as a &lt;code&gt;BuildConfig&lt;/code&gt; variable
>>>>>>> eb65a6aa5cfe80bd04fec6de52aa24f68207f55a
=======
&lt;p&gt;&lt;strong&gt;4)&lt;/strong&gt; That’s it! you can now use your API key anywhere in your android application as a &lt;code&gt;BuildConfig&lt;/code&gt; variable
>>>>>>> 03b9ea92447d904fa93e04d1abab6916eec389f7
=======
&lt;p&gt;&lt;strong&gt;4)&lt;/strong&gt; That’s it! you can now use your API key anywhere in your android application as a &lt;code&gt;BuildConfig&lt;/code&gt; variable
>>>>>>> 085fd2052ea088f15bfd5dc602a103ed413cad3f
anywhere in your project like so: &lt;code&gt;BuildConfig.MY_API_KEY&lt;/code&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 12 Apr 2016 07:39:59 -0700</pubDate>
        <link>/hiding-api-keys-with-gradle</link>
        <guid isPermaLink="true">/hiding-api-keys-with-gradle</guid>
        
        <category>android</category>
        
        <category>gradle</category>
        
        <category>API</category>
        
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> 238ee05c08c07694452bbffe57b1ed41fe9907e0
=======
>>>>>>> 098476de75a84c64c85acaf78ca1c4b4f97e808a
=======
>>>>>>> eb65a6aa5cfe80bd04fec6de52aa24f68207f55a
=======
>>>>>>> 03b9ea92447d904fa93e04d1abab6916eec389f7
=======
>>>>>>> 085fd2052ea088f15bfd5dc602a103ed413cad3f
        
      </item>
    
  </channel>
</rss>
